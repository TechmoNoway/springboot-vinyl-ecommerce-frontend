        <div className="w-2/3 pl-6">
          {/* Name Fields */}
          <div className="flex gap-4">
            <div className="w-1/2">
              <label className="block text-sm font-medium">
                Fullname <span className="text-red-500">*</span>
              </label>
              <input
                type="text"
                value={userProfile?.fullname || ""}
                name="fullname"
                onChange={onInputChange}
                className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
              />
            </div>
            <div className="w-1/2">
              <label className="block text-sm font-medium">
                Email Address <span className="text-red-500">*</span>
              </label>
              <input
                type="text"
                value={userProfile?.email || ""}
                name="email"
                onChange={onInputChange}
                className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
              />
            </div>
          </div>

          {/* Address */}
          <div>
            <label className="block text-sm font-medium">
              Address <span className="text-red-500">*</span>
            </label>
            <input
              type="text"
              value={userProfile?.address || ""}
              name="address"
              onChange={onInputChange}
              className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
            />
          </div>

          {/* Phone */}
          <div>
            <label className="block text-sm font-medium">
              Phone <span className="text-red-500">*</span>
            </label>
            <input
              type="text"
              value={userProfile?.phone || ""}
              name="phone"
              onChange={onPhoneChange}
              className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
              inputMode="numeric"
              pattern="[0-9]*"
            />
          </div>

          {/* Birthdate and gender */}
          <div className="flex gap-4">
            <div className="w-1/2">
              <label className="block text-sm font-medium">
                Birthdate <span className="text-red-500">*</span>
              </label>
              <Popover>
                <PopoverTrigger asChild className="">
                  <Button
                    variant={"outline"}
                    className={cn(
                      "w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
                    )}
                  >
                    {userProfile.birthday ? (
                      format(new Date(userProfile.birthday), "PPP")
                    ) : (
                      <span>Pick a date</span>
                    )}

                    <CalendarIcon className="ml-auto h-4 w-4 opacity-50" />
                  </Button>
                </PopoverTrigger>
                <PopoverContent className="w-auto p-0" align="start">
                  <Calendar
                    selected={
                      userProfile.birthday
                        ? new Date(userProfile.birthday)
                        : undefined
                    }
                    onDayClick={(date) =>
                      setUserProfile({
                        ...userProfile,
                        birthday: date,
                      })
                    }
                    mode="default"
                    disabled={(date) =>
                      date > new Date() ||
                      date < new Date("1900-01-01")
                    }
                    initialFocus
                  />
                </PopoverContent>
              </Popover>
            </div>
            <div className="w-1/2">
              <label className="block text-sm font-medium">
                Gender <span className="text-red-500">*</span>
              </label>
              <Select
                onValueChange={(value) =>
                  onSelectChange("gender", value)
                }
                value={userProfile.gender}
              >
                <SelectTrigger className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="Male">Male</SelectItem>
                  <SelectItem value="Female">Female</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>

          <button
            onClick={hanldeUpdateUser}
            className="bg-black text-white py-2 px-6 rounded-md"
          >
            SAVE CHANGES
          </button>

          {/* Password Change Section */}
          <h3 className="font-semibold text-gray-700 mt-14 mb-2">
            PASSWORD CHANGE
          </h3>

          <div>
            <label className="block text-sm font-medium">
              Current Password (leave blank to leave unchanged)
            </label>
            <input
              type="password"
              className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
              name="currentPassword"
              value={changePasswordForm.currentPassword}
              onChange={onPasswordInputChange}
            />
          </div>

          <div>
            <label className="block text-sm font-medium">
              New Password (leave blank to leave unchanged)
            </label>
            <input
              type="password"
              className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
              name="newPassword"
              value={changePasswordForm.newPassword}
              onChange={onPasswordInputChange}
            />
          </div>

          <div>
            <label className="block text-sm font-medium">
              Confirm New Password
            </label>
            <input
              type="password"
              className="w-full border rounded-md px-3 py-2 mt-1 mb-4 bg-white"
              name="confirmNewPassword"
              value={changePasswordForm.confirmNewPassword}
              onChange={onPasswordInputChange}
            />
          </div>

          {/* Save Button */}
          <button
            onClick={handleChangePassword}
            className="bg-black text-white py-2 px-6 rounded-md"
          >
            SAVE PASSWORD
          </button>
        </div>